#pragma checksum "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\Pages\SearchVehicle.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e44d7e4d08c9d2feee10f801a49302c9877d2e5d"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace DemoProject.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using DemoProject.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\_Imports.razor"
using DemoProject.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\Pages\SearchVehicle.razor"
using DemoProject.DatabaseContext;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/search")]
    public partial class SearchVehicle : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 19 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\Pages\SearchVehicle.razor"
          
        protected async Task HandleValidSubmit()
        {
            var url = $"/api/Vehicle/GetVehicle/{searchTerm}";
            vehicles = await Http.GetJsonAsync<Vehicle[]>(url).ConfigureAwait(false);
          
            this.StateHasChanged();
        }
    

#line default
#line hidden
#nullable disable
#nullable restore
#line 99 "C:\Users\Shital.Zambare\Documents\Visual Studio 2019\Projects\DemoProject\Client\Pages\SearchVehicle.razor"
 
            Vehicle[] vehicles;
            protected override async Task OnInitializedAsync()
            {
                vehicles = await Http.GetFromJsonAsync<Vehicle[]>("Vehicle");
            }
            #region Pagination

            int totalPages;
            int totalRecords;
            int curPage;
            int pagerSize;
            int pageSize;
            int startPage;
            int endPage;
            string sortColumnName = "Id";
            string sortDir = "DESC";

            #endregion

            private string searchTerm;
            private string SearchTerm
            {
                get { return searchTerm; }
                set { searchTerm = value; FilterRecords(); }
            }
            async void FormSubmitted(EditContext editContext)
            {
                var url = $"/api/Vehicle/GetVehicle/{searchTerm}";
                vehicles = await Http.GetJsonAsync<Vehicle[]>(url).ConfigureAwait(false);
                // curPage = currentPage;
                this.StateHasChanged();
            }
            public async Task refreshRecords(int currentPage)
            {
                //publishers = await publisherService.ListAll
                //   ((currentPage - 1) * pageSize, pageSize, sortColumnName,
                //   sortDir, searchTerm);
                var url = $"/api/Vehicle/GetVehicle/{searchTerm}";
                vehicles = await Http.GetJsonAsync<Vehicle[]>(url).ConfigureAwait(false);
                curPage = currentPage;
                this.StateHasChanged();
            }

            public void SetPagerSize(string direction)
            {
                if (direction == "forward" && endPage < totalPages)
                {
                    startPage = endPage + 1;
                    if (endPage + pagerSize < totalPages)
                    {
                        endPage = startPage + pagerSize - 1;
                    }
                    else
                    {
                        endPage = totalPages;
                    }
                    this.StateHasChanged();
                }
                else if (direction == "back" && startPage > 1)
                {
                    endPage = startPage - 1;
                    startPage = startPage - pagerSize;
                }
                else
                {
                    startPage = 1;
                    endPage = totalPages;
                }
            }

            public async Task NavigateToPage(string direction)
            {
                if (direction == "next")
                {
                    if (curPage < totalPages)
                    {
                        if (curPage == endPage)
                        {
                            SetPagerSize("forward");
                        }
                        curPage += 1;
                    }
                }
                else if (direction == "previous")
                {
                    if (curPage > 1)
                    {
                        if (curPage == startPage)
                        {
                            SetPagerSize("back");
                        }
                        curPage -= 1;
                    }
                }
                await refreshRecords(curPage);
            }
            public void FilterRecords()
            {
                endPage = 0;
                this.OnInitializedAsync().Wait();
            }
        

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
